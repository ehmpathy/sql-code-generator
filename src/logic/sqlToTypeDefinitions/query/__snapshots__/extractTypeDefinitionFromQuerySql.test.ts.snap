// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately an example of selecting columns a single table by id 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "id",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.id",
      },
    },
  ],
  "name": "find_image_by_id",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "url",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.url",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "caption",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.caption",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "alt_text",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.alt_text",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "credit",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "i.credit",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "i",
      "functionName": null,
      "tableName": "image",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately an upsert query 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "suggestionSource",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.0",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "externalId",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.1",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "suggestedIdeaId",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.2",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "status",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.3",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "result",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.input.4",
        "tableReferencePath": null,
      },
    },
  ],
  "name": "upsert_suggestion",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_suggestion.output",
        "tableReferencePath": null,
      },
    },
  ],
  "tableReferences": [],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately for a query uses an input variable containing the substring "from" 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "externalId",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_email.input.0",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "sesMessageId",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_email.input.1",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "toReceiverId",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_email.input.2",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "fromSenderId",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_email.input.3",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "subject",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_email.input.4",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "body",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_email.input.5",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "status",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_email.input.6",
        "tableReferencePath": null,
      },
    },
  ],
  "name": "upsert_email",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "dgv.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "dgv.uuid",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "dgv",
      "functionName": "upsert_email",
      "tableName": null,
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately for a query with a postgres fn in the select expressions (as well as subselect) 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "id",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.id",
      },
    },
  ],
  "name": "find_job_by_id",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "title",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.title",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "status",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.status",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "description",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.description",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "location_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.location_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "photo_ids",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "array_agg.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "created_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.created_at",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "effective_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.effective_at",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "updated_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.created_at",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "s",
      "functionName": null,
      "tableName": "job",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "cvp",
      "functionName": null,
      "tableName": "job_cvp",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "v",
      "functionName": null,
      "tableName": "job_version",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "job_version_to_photo",
      "functionName": null,
      "tableName": "job_version_to_photo",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately for a query with limit and offset input variables 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "threadUuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "chat_thread.uuid",
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "limit",
      "plural": false,
      "type": [
        "number",
      ],
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "offset",
      "plural": false,
      "type": [
        "number",
      ],
    },
  ],
  "name": "find_all_chat_messages_by_thread",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "chat_message.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "chat_message.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "thread_uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "chat_thread.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "sent_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "chat_message.sent_at",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "text",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "chat_message.text",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "chat_message",
      "functionName": null,
      "tableName": "view_chat_message_current",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "chat_thread",
      "functionName": null,
      "tableName": "chat_thread",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "chat_thread",
      "functionName": null,
      "tableName": "chat_thread",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately for query which comments out one of the select expressions 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "firstName",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.first_name",
      },
    },
  ],
  "name": "find_all_by_name_excluding_one_field",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "first_name",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.first_name",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "u",
      "functionName": null,
      "tableName": "user",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately for query with a subquery in the select expressions 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [],
  "name": "find_with_subselect_in_select_expressions",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "name",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.name",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "ingredient_ids",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "group_concat.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "created_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.created_at",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "s",
      "functionName": null,
      "tableName": "ice_cream",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "ice_cream_to_ingredient",
      "functionName": null,
      "tableName": "ice_cream_to_ingredient",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately for this example that selects both from tables and functions 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "lastName",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.last_name",
      },
    },
  ],
  "name": "find_users_by_last_name",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "full_name",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "concat.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "age",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "u.age",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "phone_number",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "p.number",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "description",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "up.description",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "u",
      "functionName": null,
      "tableName": "user",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "p",
      "functionName": null,
      "tableName": "phone",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "up",
      "functionName": null,
      "tableName": "view_user_profile_current",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql should be able to determine types accurately when selecting columns from multiple tables, no input variables 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [],
  "name": "select_suggestion",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "suggestion_source",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.suggestion_source",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "external_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.external_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "suggested_idea_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.suggested_idea_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "resultant_curated_idea_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.resultant_curated_idea_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "status",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.status",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "result",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.result",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "created_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "s.created_at",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "effective_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.effective_at",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "updated_at",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "v.created_at",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "s",
      "functionName": null,
      "tableName": "suggestion",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "cvp",
      "functionName": null,
      "tableName": "suggestion_cvp",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "v",
      "functionName": null,
      "tableName": "suggestion_version",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql subqueries should be able to determine types accurately a query which has type casting in select expressions 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "uuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.uuid",
      },
    },
  ],
  "name": "find_train_by_uuid",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "home_station_geocode",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "json_build_object.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "combination_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.combination_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "locomotive_uuids",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "array_agg.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "carriage_uuids",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "array_agg.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "engineer_uuids",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "array_agg.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "lead_engineer_uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train_engineer.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "status",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.status",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "train",
      "functionName": null,
      "tableName": "view_train_current",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "train_engineer",
      "functionName": null,
      "tableName": "train_engineer",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "geocode",
      "functionName": null,
      "tableName": "geocode",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "locomotive",
      "functionName": null,
      "tableName": "locomotive",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "carriage",
      "functionName": null,
      "tableName": "carriage",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "train_engineer",
      "functionName": null,
      "tableName": "train_engineer",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql subqueries should be able to determine types accurately a query which has type casting on inputs expressions 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "homeStationGeocodeId",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_train.input.0",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "combinationId",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_train.input.1",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "locomotiveUuids",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "unnest.input.0",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "carriageUuids",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "unnest.input.0",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "engineerUuids",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "unnest.input.0",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "leadEngineerUuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train_engineer.uuid",
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "status",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_train.input.6",
        "tableReferencePath": null,
      },
    },
  ],
  "name": "upsert_train",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "dgv.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "dgv.uuid",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "dgv",
      "functionName": "upsert_train",
      "tableName": null,
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "train_engineer",
      "functionName": null,
      "tableName": "train_engineer",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "locomotive",
      "functionName": null,
      "tableName": "locomotive",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "carriage",
      "functionName": null,
      "tableName": "carriage",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "train_engineer",
      "functionName": null,
      "tableName": "train_engineer",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql subqueries should be able to determine types accurately a query with subqueries and unnesting 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "id",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.id",
      },
    },
  ],
  "name": "find_train_by_id",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "uuid",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.uuid",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "home_station_geocode",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "json_build_object.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "combination_id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.combination_id",
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "locomotive_uuids",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "array_agg.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "carriage_uuids",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "array_agg.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "engineer_uuids",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "array_agg.output",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQuerySelectExpression {
      "alias": "status",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "train.status",
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "train",
      "functionName": null,
      "tableName": "view_train_current",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "geocode",
      "functionName": null,
      "tableName": "geocode",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "locomotive",
      "functionName": null,
      "tableName": "locomotive",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "carriage",
      "functionName": null,
      "tableName": "carriage",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "train_engineer",
      "functionName": null,
      "tableName": "train_engineer",
    },
    TypeDefinitionOfQueryTableReference {
      "alias": "unnest",
      "functionName": "unnest",
      "tableName": null,
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql subqueries should be able to determine types accurately an upsert query which includes a subquery 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "serviceProviderUuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": null,
        "tableReferencePath": "p.uuid",
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "bannerImageUuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_provider_profile.input.1",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "pictureImageUuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_provider_profile.input.2",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "introduction",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_provider_profile.input.3",
        "tableReferencePath": null,
      },
    },
  ],
  "name": "upsert_profile_with_subselect",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_provider_profile.output",
        "tableReferencePath": null,
      },
    },
  ],
  "tableReferences": [
    TypeDefinitionOfQueryTableReference {
      "alias": "p",
      "functionName": null,
      "tableName": "view_provider_current",
    },
  ],
}
`;

exports[`extractTypeDefinitionFromQuerySql subqueries should be able to determine types accurately an upsert query which includes a subquery which calls a function 1`] = `
TypeDefinitionOfQuery {
  "inputVariables": [
    TypeDefinitionOfQueryInputVariable {
      "name": "providerUuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "get_provider_id_by_uuid.input.0",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "bannerImageUuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_provider_profile.input.1",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "pictureImageUuid",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_provider_profile.input.2",
        "tableReferencePath": null,
      },
    },
    TypeDefinitionOfQueryInputVariable {
      "name": "introduction",
      "plural": false,
      "type": TypeDefinitionReference {
        "functionReferencePath": "upsert_provider_profile.input.3",
        "tableReferencePath": null,
      },
    },
  ],
  "name": "upsert_profile_with_subquery_function",
  "path": "__PATH__",
  "selectExpressions": [
    TypeDefinitionOfQuerySelectExpression {
      "alias": "id",
      "typeReference": TypeDefinitionReference {
        "functionReferencePath": "upsert_provider_profile.output",
        "tableReferencePath": null,
      },
    },
  ],
  "tableReferences": [],
}
`;
